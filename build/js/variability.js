"use strict";var width=300,height=200,marginBottom=50,chartColor="rgb(66, 170, 143)",font="Didact Gothic",fontSize="10",bgcolor="white",loading=0;
"use strict";drawCharts("2017-07-01");
"use strict";function drawCharts(t){drawPriceChart(setDate(t,"ether"),"#ether",width,height,"Euro"),drawPriceChart(setDate(t,"bitcoin"),"#bitcoin",width,height,"$"),drawPriceChart(setDate(t,"litecoin"),"#litecoin",width,height,"Euro"),drawVarPriceChart(setDate(t,"ether"),"#ether-var",width,height,"Euro"),drawVarPriceChart(setDate(t,"bitcoin"),"#bitcoin-var",width,height,"$"),drawVarPriceChart(setDate(t,"litecoin"),"#litecoin-var",width,height,"Euro")}
"use strict";function drawPriceChart(t,e,n,r,a){queue().defer(d3.csv,t).await(function(t,i){loading++,progress(loading),t&&console.log(t);var o,c,l,s,d=e.substr(1);d.toString(),document.getElementById(d).innerHTML="<p>".concat(i[0].High," ").concat(a," </p>"),o=d3.max(i,function(t){return+t.High}),c=d3.min(i,function(t){return+t.High}),l=d3.min(i,function(t){return t.Date}),s=d3.max(i,function(t){return t.Date});var g=d3.time.scale().domain([new Date(l),new Date(s)]).range([10,n-41]),u=d3.svg.axis().scale(g),f=d3.scale.linear().domain([0,o-c]).range([0,r-10-marginBottom]);if(h){var m=h.select(e);m.exit().remove(),console.log("there is svg")}var h=d3.select(e).append("svg").attr("width",n).attr("height",r).style("background-color",bgcolor).append("g");d3.transition().duration(4500);h.selectAll("rect").data(i).enter().append("rect").attr("x",function(t,e){return n-n/i.length-e*((n-50)/i.length)}).attr("y",function(t){return r-marginBottom-f(t.High-c)}).attr("height",function(t){return f(t.High-c)}).attr("width",function(t){return n/i.length}).style("fill","white").append("svg:title").text(function(t){return"Date: ".concat(t.Date," Price: ").concat(t.High)}).append("g"),h.selectAll("rect").transition().duration(1500).style("fill",chartColor),h.selectAll("text").data(i).enter().append("text").text(function(t,e){return parseInt(c+.1*e*(o-c))}).attr("text-anchor","middle").attr("x",function(){return 20}).attr("y",function(t,e){return r-marginBottom-fontSize+parseInt(fontSize)-e*((r-marginBottom-fontSize)/10)}).attr("font-family",font).attr("font-size",fontSize).attr("fill","black");var p=r-marginBottom;h.append("g").attr("class","x axis").attr("transform","translate(40,".concat(p,")")).call(u).selectAll("text").attr("y",0).attr("x",9).attr("dy",".35em").attr("transform","rotate(90)").attr("font-size",fontSize).style("text-anchor","start")})}
"use strict";function drawVarPriceChart(t,n,e,r,a){return queue().defer(d3.csv,t).await(function(t,o){loading++,progress(loading),t&&console.log(t);var i,c,l,u,d=n.substr(1);d.toString(),document.getElementById(d).innerHTML="<p>".concat(o[0].Open," ").concat(a," </p>"),i=d3.max(o,function(t){return+t.High-t.Low}),c=d3.min(o,function(t){return+t.High-t.Low});var s=d3.mean(o,function(t){return+t.High-t.Low});l=d3.min(o,function(t){return t.Date}),u=d3.max(o,function(t){return t.Date}),s=s.toFixed(0),i=i.toFixed(0),document.getElementById(d).innerHTML=" <p> Max: ".concat(i," Average: ").concat(s," ").concat(a," </p>");var g=d3.time.scale().domain([new Date(l),new Date(u)]).range([10,e-41]),f=d3.svg.axis().scale(g),m=d3.scale.linear().domain([0,i-c]).range([0,r-10-marginBottom]),h=d3.select(n).append("svg").attr("width",e).attr("height",r).style("background-color",bgcolor);h.selectAll("rect").data(o).enter().append("rect").attr("x",function(t,n){return e+0-e/o.length-n*((e-50)/o.length)}).attr("y",function(t){return r-marginBottom-m(t.High-t.Low)}).attr("height",function(t){return m(t.High-t.Low)}).attr("width",function(t){return e/o.length}).style("fill","white"),h.selectAll("rect").transition().duration(1500).style("fill",chartColor).transition().duration(3e3).style("fill",function(t){return t.High-t.Low>s?"orange":chartColor}),h.selectAll("text").data(o).enter().append("text").text(function(t,n){return parseInt(c+.1*n*(i-c))}).attr("text-anchor","middle").attr("x",function(){return 20}).attr("y",function(t,n){return r-marginBottom-n*((r-marginBottom-fontSize)/10)}).attr("font-family",font).attr("font-size",fontSize).attr("fill","black");var x=r-marginBottom;h.append("g").attr("class","x axis").attr("transform","translate(40,"+x+")").call(f).selectAll("text").attr("y",0).attr("x",9).attr("dy",".35em").attr("transform","rotate(90)").attr("font-size",fontSize).style("text-anchor","start")}),"done"}
"use strict";function progress(e){document.getElementById("progress").innerHTML="Loading data: ".concat((e/6*100).toFixed(0),"%"),document.getElementById("progress").style.width="".concat(e/6*100,"%"),document.getElementById("progress-bar").style.display=6==e||0==e?"none":"block"}
"use strict";function drawChartsSelectMonths(a){6==loading&&(loading=0,drawCharts(setDateScope(a)))}function alldata(){6==loading&&(loading=0,drawCharts("2017-07-01"))}
"use strict";function setDateScope(t){var a=new Date;return a.setMonth(a.getMonth()-t),a.toISOString().slice(0,10)}function setDate(t,a){var e="&start_date="+t;return"bitcoin"==a?"https://www.quandl.com/api/v3/datasets/BITSTAMP/USD.csv?api_key=fzanZC3297Jsid-E8vCF"+e:"ether"==a?"https://www.quandl.com/api/v3/datasets/GDAX/ETH_EUR.csv?api_key=fzanZC3297Jsid-E8vCF"+e:"litecoin"==a?"https://www.quandl.com/api/v3/datasets/GDAX/LTC_EUR.csv?api_key=fzanZC3297Jsid-E8vCF"+e:void 0}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
