"use strict";var width=350,height=200,chartColor="rgb(66, 170, 143)",font="Didact Gothic",fontSize="10px",bgcolor="white",bitcoinPriceData="https://www.quandl.com/api/v3/datasets/GDAX/BTC_EUR.csv?api_key=fzanZC3297Jsid-E8vCF";
"use strict";function makeVarGraph(t,e){var n,r;n=d3.max(e,function(t){return+t.High-t.Open}),r=d3.min(e,function(t){return+t.High-t.Open});var i=d3.scale.linear().domain([0,n-r]).range([0,height-10]),a=d3.select("#bitcoin-variability").append("svg").attr("width",width).attr("height",height).style("background-color",bgcolor);a.selectAll("rect").data(e).enter().append("rect").attr("x",function(t,n){return width+0-width/e.length-n*((width-50)/e.length)}).attr("y",function(t){return height-i(t.High-t.Open)}).attr("height",function(t){return i(t.High-t.Open)}).attr("width",function(t){return width/e.length}).style("fill",chartColor).append("svg:title").text(function(t){return"Date: ".concat(t.Date," Variability: ").concat(parseInt(t.High-t.Open)," Euro")}),a.selectAll("text").data(e).enter().append("text").text(function(t,e){return parseInt(r+.1*e*(n-r))}).attr("text-anchor","middle").attr("x",function(){return 20}).attr("y",function(t,e){return height-5-e*(height/10)}).attr("font-family",font).attr("font-size",fontSize).attr("fill","black"),a.selectAll("circle").data(e).enter().append("text").text(function(t){return(t.High-t.Open).toFixed(0)}).attr("text-anchor","middle").attr("x",function(t,n){return width-n*(width/e.length)}).attr("y",function(t){return height-i(t.Open)}).attr("font-family",font).attr("font-size",fontSize).attr("fill","black")}queue().defer(d3.csv,bitcoinPriceData).await(makeVarGraph);
"use strict";function makeGraphs(t,e){var n,r;document.getElementById("bitcoin").innerHTML="".concat(e[0].Open," BTC/Euro"),n=d3.max(e,function(t){return+t.Open}),r=d3.min(e,function(t){return+t.Open});var a=d3.scale.linear().domain([0,n-r]).range([0,height-10]),i=d3.select("#cost").append("svg").attr("width",width).attr("height",height).style("background-color",bgcolor);i.selectAll("rect").data(e).enter().append("rect").attr("x",function(t,n){return width-width/e.length-n*((width-50)/e.length)}).attr("y",function(t){return height-a(t.Open-r)}).attr("height",function(t){return a(t.Open-r)}).attr("width",function(t){return width/e.length}).style("fill",chartColor).append("svg:title").text(function(t){return"Date: ".concat(t.Date," Price: ").concat(t.Open)}),i.selectAll("text").data(e).enter().append("text").text(function(t,e){return parseInt(r+.1*e*(n-r))}).attr("text-anchor","middle").attr("x",function(){return 20}).attr("y",function(t,e){return height-5-e*(height/10)}).attr("font-family",font).attr("font-size",fontSize).attr("fill","black")}queue().defer(d3.csv,bitcoinPriceData).await(makeGraphs);
"use strict";function makeGraph2(e,t){console.log(t);var a=crossfilter(t),i=d3.time.format("%d/%m/%Y").parse;t.forEach(function(e){e.date=i(e.date)});var r=a.dimension(dc.pluck("date")),o=r.group().reduceSum(dc.pluck("spend")),d=r.bottom(1)[0].date,c=r.top(1)[0].date;dc.lineChart("#chart-here").width(1e3).height(300).margins({top:10,right:50,bottom:30,left:50}).dimension(r).group(o).transitionDuration(500).x(d3.time.scale().domain([d,c])).xAxisLabel("Month").yAxis().ticks(4),dc.renderAll()}queue().defer(d3.csv,bitcoinPriceData).await(makeGraph2);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
