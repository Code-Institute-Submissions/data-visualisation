"use strict";var width=300,height=200,chartColor="rgb(66, 170, 143)",font="Didact Gothic",fontSize="10",bgcolor="white",startDate="&start_date=2017-03-06",bitcoinPriceData="https://www.quandl.com/api/v3/datasets/GDAX/BTC_EUR.csv?api_key=fzanZC3297Jsid-E8vCF"+startDate,etherPriceData="https://www.quandl.com/api/v3/datasets/GDAX/ETH_EUR.csv?api_key=fzanZC3297Jsid-E8vCF"+startDate,litecoinPriceData="https://www.quandl.com/api/v3/datasets/GDAX/LTC_EUR.csv?api_key=fzanZC3297Jsid-E8vCF"+startDate;
"use strict";
"use strict";drawPriceChart(etherPriceData,"#ether",width,height),drawPriceChart(bitcoinPriceData,"#bitcoin",width,height),drawVarPriceChart(etherPriceData,"#ether-var",width,height),drawVarPriceChart(bitcoinPriceData,"#bitcoin-var",width,height),drawPriceChart(litecoinPriceData,"#litecoin",width,height),drawVarPriceChart(litecoinPriceData,"#litecoin-var",width,height);
"use strict";function drawPriceChart(t,n,e,r){queue().defer(d3.csv,t).await(function(t,a){t&&console.log(t);var c,o,i=n.substr(1);i.toString(),document.getElementById(i).innerHTML="<p>".concat(a[0].Open," Euro </p>"),c=d3.max(a,function(t){return+t.Open}),o=d3.min(a,function(t){return+t.Open});var u=d3.scale.linear().domain([0,c-o]).range([0,r-10]),l=d3.select(n).append("svg").attr("width",e).attr("height",r).style("background-color",bgcolor);l.selectAll("rect").data(a).enter().append("rect").attr("x",function(t,n){return e-e/a.length-n*((e-50)/a.length)}).attr("y",function(t){return r-u(t.Open-o)}).attr("height",function(t){return u(t.Open-o)}).attr("width",function(t){return e/a.length}).style("fill",chartColor).append("svg:title").text(function(t){return"Date: ".concat(t.Date," Price: ").concat(t.Open)}),l.selectAll("text").data(a).enter().append("text").text(function(t,n){return parseInt(o+.1*n*(c-o))}).attr("text-anchor","middle").attr("x",function(){return 20}).attr("y",function(t,n){return r+parseInt(fontSize)-n*(r/10)}).attr("font-family",font).attr("font-size",fontSize).attr("fill","black")})}
"use strict";function drawVarPriceChart(t,n,e,r){queue().defer(d3.csv,t).await(function(t,a){var o,i,c,u=n.substr(1);u.toString(),o=d3.max(a,function(t){return+t.High-t.Low}),i=d3.min(a,function(t){return+t.High-t.Low}),c=(c=d3.mean(a,function(t){return+t.High-t.Low})).toFixed(0),o=o.toFixed(0),document.getElementById(u).innerHTML=" <p> Max: ".concat(o," Average: ").concat(c," Euro </p>"),document.getElementById(u).innerHTML=" <p> Max: ".concat(o," Average: ").concat(c," Euro </p>"),console.log(o);var l=d3.scale.linear().domain([0,o-i]).range([0,r-10]),d=d3.select(n).append("svg").attr("width",e).attr("height",r).style("background-color",bgcolor);d.selectAll("rect").data(a).enter().append("rect").attr("x",function(t,n){return e+0-e/a.length-n*((e-50)/a.length)}).attr("y",function(t){return r-l(t.High-t.Low)}).attr("height",function(t){return l(t.High-t.Low)}).attr("width",function(t){return e/a.length}).style("fill",function(t){return t.High-t.Low>c?"orange":chartColor}).append("svg:title").text(function(t){return"Date: ".concat(t.Date," Variability: ").concat(parseInt(t.High-t.Low)," Euro")}),d.selectAll("text").data(a).enter().append("text").text(function(t,n){return parseInt(i+.1*n*(o-i))}).attr("text-anchor","middle").attr("x",function(){return 20}).attr("y",function(t,n){return r+parseInt(fontSize)-n*(r/10)}).attr("font-family",font).attr("font-size",fontSize).attr("fill","black")})}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
